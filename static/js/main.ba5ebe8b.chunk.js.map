{"version":3,"sources":["assets/icons/calendar.svg","assets/icons/left.svg","assets/icons/right.svg","assets/icons/face.svg","assets/icons/settings_white.svg","assets/icons/history.svg","assets/icons/list.svg","assets/icons/logo.svg","components/Container/Container.jsx","components/Header/Header.jsx","state/actionCreators.js","state/actionTypes.js","components/Button/Button.jsx","components/Input/Input.jsx","components/SearchSection/SearchSection.jsx","state/api.js","state/thunks.js","components/SearchSection/SearchSectionContainer.jsx","components/ItemCard/ItemCard.jsx","components/SliderSection/SliderSection.jsx","components/SliderSection/SliderSectionContainer.jsx","components/ProfileSection/ProfileSection.jsx","components/ProfileSection/ProfileSectionContainer.jsx","App.js","state/reducer.js","state/store.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Header","icon","title","nav","useRef","to","activeClassName","src","alt","ref","exact","onClick","e","currentTarget","classList","toggle","current","setPage","page","type","setList","list","setProfileNameAC","name","setProfileListAC","setProfileHistoryAC","history","addProfileHistoryAC","Button","id","Input","value","onChange","target","SearchSection","setTitle","setType","getList","defaultValue","instance","Axios","create","baseURL","storage","window","localStorage","API","get","then","response","data","Promise","resolve","reject","setItem","getItem","setProfileList","dispatch","catch","err","alert","setProfileHistory","JSON","stringify","connect","state","options","searchType","Response","Search","Error","ItemCard","poster","year","tabIndex","time","SliderSection","addList","slider","buttonFunction","sliderBlock","scrollSize","clientWidth","getAttribute","scrollBy","left","top","behavior","scrollWidth","scrollLeft","console","log","useEffect","scrollTo","right","map","item","Title","Poster","Year","key","ProfileSection","setProfileName","clearProfileHistory","settingsModal","historyModal","listModal","useState","inputValue","setInputValue","toggleModal","contains","closest","remove","avatar","settingsIcon","historyIcon","listIcon","length","index","profile","getProfileName","getProfileList","getProfileHistory","parse","logo","path","SearchSectionContainer","SliderSectionContainer","ProfileSectionContainer","initialState","store","createStore","action","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ba5ebe8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.17b75e4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.1caaef75.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.9a9e9d18.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.9f965a85.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_white.5b0cc761.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.dd742d74.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.654fd082.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1ae09dda.svg\";","import React from 'react'\r\nimport './Container.scss'\r\n\r\nconst Container = ({ children }) => {\r\n    return (\r\n        <div className='container'>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Container","import React, { useRef } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Container from '../Container/Container'\r\nimport './Header.scss'\r\n\r\nconst Header = ({ icon, title }) => {\r\n\r\n    const nav = useRef(null)\r\n\r\n    const openMenu = (e) => {\r\n        e.currentTarget.classList.toggle('header__burger_open')\r\n        nav.current.classList.toggle('header__nav_open')\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <Container>\r\n                <NavLink to='/about' className='button button_large header__main' activeClassName='button_selected'>\r\n                    <img src={icon} alt='logo' />\r\n                    <span>{title}</span>\r\n                </NavLink>\r\n                <nav className='header__nav' ref={nav}>\r\n                    <NavLink exact to='/' className='button' activeClassName='button_selected'>\r\n                        Search\r\n                    </NavLink>\r\n                    <NavLink to='profile' className='button' activeClassName='button_selected'>\r\n                        Profile\r\n                    </NavLink>\r\n                </nav>\r\n                <span className='header__burger' onClick={openMenu} />\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {\r\n    SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST,\r\n    SET_PROFILE_NAME, SET_PROFILE_LIST, ADD_PROFILE_LIST, SET_PROFILE_HISTORY, ADD_PROFILE_HISTORY\r\n} from './actionTypes'\r\n\r\nexport const setTitle = (title) => ({ type: SET_TITLE, title })\r\nexport const setType = (searchType) => ({ type: SET_TYPE, searchType })\r\nexport const setPage = (page) => ({ type: SET_PAGE, page })\r\nexport const setList = (list) => ({ type: SET_LIST, list })\r\nexport const addList = (list) => ({ type: ADD_LIST, list })\r\nexport const setProfileNameAC = (name) => ({ type: SET_PROFILE_NAME, name })\r\nexport const setProfileListAC = (list) => ({ type: SET_PROFILE_LIST, list })\r\nexport const addProfileListAC = (list) => ({ type: ADD_PROFILE_LIST, list })\r\nexport const setProfileHistoryAC = (history) => ({ type: SET_PROFILE_HISTORY, history })\r\nexport const addProfileHistoryAC = (history) => ({ type: ADD_PROFILE_HISTORY, history })","export const SET_TITLE = 'SET_TITLE'\r\nexport const SET_TYPE = 'SET_TYPE'\r\nexport const SET_PAGE = 'SET_PAGE'\r\nexport const SET_LIST = 'SET_LIST'\r\nexport const ADD_LIST = 'ADD_LIST'\r\nexport const SET_PROFILE_NAME = 'SET_PROFILE_NAME'\r\nexport const SET_PROFILE_LIST = 'SET_PROFILE_LIST'\r\nexport const ADD_PROFILE_LIST = 'ADD_PROFILE_LIST'\r\nexport const SET_PROFILE_HISTORY = 'SET_PROFILE_HISTORY'\r\nexport const ADD_PROFILE_HISTORY = 'ADD_PROFILE_HISTORY'","import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst Button = ({ className, id, children, onClick }) => {\r\n    return (\r\n        <button className={`button ${className ? className : ''}`} onClick={onClick} id={id}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Input.scss'\r\n\r\nconst Input = ({ value, type, onChange }) => {\r\n\r\n    const onSetTitle = (e) => {\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <input className='input' type={type} value={value} onChange={onSetTitle} />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Container from '../Container/Container';\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\nimport './SearchSection.scss'\r\n\r\nconst SearchSection = ({ title, type, list, setTitle, setType, getList }) => {\r\n\r\n    return (\r\n        <section className='search'>\r\n            <Container>\r\n                <div className={`search__block ${!list ? 'search__block_middle' : ''}`}>\r\n                    <Input value={title} type='search' onChange={setTitle} />\r\n                    <select className='select' defaultValue={type} onChange={e => setType(e.target.value)}>\r\n                        <option value='movie'>Movie</option>\r\n                        <option value='series'>Series</option>\r\n                    </select>\r\n                    <Button onClick={e => getList(title, type)}>Search</Button>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchSection","import Axios from \"axios\"\r\n\r\nconst key = 'dfdae3d4'\r\n\r\nconst instance = Axios.create({\r\n    baseURL: `https://www.omdbapi.com/`\r\n})\r\n\r\nconst storage = window.localStorage\r\n\r\nexport const API = {\r\n    getList(title, type, page) {\r\n        return instance.get(`?apikey=${key}&s=${title}&type=${type}&page=${page}`).then(response => response.data)\r\n    },\r\n\r\n    setLocalName(name) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('name', name)\r\n            resolve(name)\r\n        })\r\n    },\r\n\r\n    getLocalName() {\r\n        return new Promise(function (resolve, reject) {\r\n            let name = storage.getItem('name')\r\n            if (!name) name = 'User'\r\n            resolve(name)\r\n        })\r\n    },\r\n\r\n    setLocalList(list) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('list', list)\r\n            resolve(list)\r\n        })\r\n    },\r\n\r\n    getLocalList() {\r\n        return new Promise(function (resolve, reject) {\r\n            let list = storage.getItem('list')\r\n            resolve(list)\r\n        })\r\n    },\r\n\r\n    clearLocalList() {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('list', '')\r\n            resolve('')\r\n        })\r\n    },\r\n\r\n    setLocalHistory(history) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('history', history)\r\n            resolve(history)\r\n        })\r\n    },\r\n\r\n    getLocalHistory() {\r\n        return new Promise(function (resolve, reject) {\r\n            let history = storage.getItem('history')\r\n            resolve(history)\r\n        })\r\n    },\r\n\r\n    clearLocalHistory() {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('history', '')\r\n            resolve('')\r\n        })\r\n    },\r\n}","import { API } from \"./api\"\r\nimport { setList, addList as addListAC, setProfileNameAC, setProfileHistoryAC, setProfileListAC, addProfileHistoryAC } from \"./actionCreators\"\r\n\r\nexport const getList = (title, type, page) => (dispatch) => {\r\n    if (!title) return\r\n    API.getList(title, type, page)\r\n        .then(data => {\r\n            if (data.Response === 'False') {\r\n                alert(data.Error)\r\n                return\r\n            }\r\n            dispatch(setList(data.Search))\r\n        })\r\n        .then(data => dispatch(addProfileHistoryAC({ title, type })))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const addList = (title, type, page) => (dispatch) => {\r\n    API.getList(title, type, page)\r\n        .then(data => {\r\n            if (data.Response === 'False') {\r\n                alert(data.Error)\r\n                return\r\n            }\r\n            dispatch(addListAC(data.Search))\r\n        })\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileName = (name) => (dispatch) => {\r\n    API.setLocalName(name)\r\n        .then(data => dispatch(setProfileNameAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileName = () => (dispatch) => {\r\n    API.getLocalName()\r\n        .then(data => dispatch(setProfileNameAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileList = (list) => (dispatch) => {\r\n    API.setLocalList(list)\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileList = () => (dispatch) => {\r\n    API.getLocalList()\r\n        .then(data => {\r\n            if (data) dispatch(setProfileListAC(data))\r\n        })\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const clearProfileList = () => (dispatch) => {\r\n    API.clearLocalList()\r\n        .then(data => dispatch(setProfileListAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileHistory = (history) => (dispatch) => {\r\n    API.setLocalHistory(JSON.stringify(history))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileHistory = () => (dispatch) => {\r\n    API.getLocalHistory()\r\n        .then(data => {\r\n            if (data) dispatch(setProfileHistoryAC(JSON.parse(data)))\r\n        }).catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const clearProfileHistory = () => (dispatch) => {\r\n    API.clearLocalHistory()\r\n        .then(data => dispatch(setProfileHistoryAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}","import { connect } from 'react-redux'\r\nimport { setTitle, setList, setType, setPage, addProfileHistoryAC } from '../../state/actionCreators'\r\nimport SearchSection from './SearchSection'\r\nimport { getList } from '../../state/thunks'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setTitle, setType, setPage, setList, getList, addProfileHistoryAC })(SearchSection)","import React from 'react'\r\nimport time from '../../assets/icons/calendar.svg'\r\nimport './ItemCard.scss'\r\n\r\nconst ItemCard = ({ title, poster, year }) => {\r\n    return (\r\n        <div className='card' tabIndex='0'>\r\n            <img src={poster} alt={title} className='card__poster' />\r\n            <div className='card__field'>\r\n                <h2 className='card__title'>{title}</h2>\r\n                <span className='card__year'><img src={time} alt='runtime' className='card__icon' />{year}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard","import React, { useEffect, useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport ItemCard from '../ItemCard/ItemCard'\r\nimport left from '../../assets/icons/left.svg'\r\nimport right from '../../assets/icons/right.svg'\r\nimport './SliderSection.scss'\r\n\r\nconst SliderSection = ({ title, type, page, list, setPage, addList }) => {\r\n\r\n    const slider = useRef(null)\r\n\r\n    const buttonFunction = (e) => {\r\n        const sliderBlock = slider.current\r\n        let scrollSize = sliderBlock.clientWidth\r\n        if (e.currentTarget.getAttribute('id') === 'prev') scrollSize = -scrollSize\r\n        sliderBlock.scrollBy({ left: scrollSize, top: 0, behavior: \"smooth\" })\r\n        if (slider.current.scrollWidth - (slider.current.scrollLeft + slider.current.clientWidth) < sliderBlock.clientWidth) {\r\n            console.log('setPage')\r\n            setPage(page + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sliderBlock = slider.current\r\n        sliderBlock.scrollTo({ left: 0, top: 0, behavior: \"smooth\" })\r\n    }, [title, type])\r\n\r\n    useEffect(() => {\r\n        if (page > 1) addList(title, type, page)\r\n    }, [page])\r\n\r\n    return (\r\n        <section className={`slider ${!list ? 'slider_hidden' : ''}`}>\r\n            <Container>\r\n                <div className='slider__block'>\r\n                    <div className='slider__navigation'>\r\n                        <Button className='slider__button' id='prev' onClick={buttonFunction}>\r\n                            <img className='header__icon' src={left} alt='logo' />\r\n                            <span className='header__title'>Prev</span>\r\n                        </Button>\r\n                        <Button className='slider__button' id='next' onClick={buttonFunction}>\r\n                            <span className='header__title'>Next</span>\r\n                            <img className='header__icon' src={right} alt='logo' />\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"slider__carousel\" ref={slider}>\r\n                        {list && list.map(item => <ItemCard title={item.Title} poster={item.Poster} year={item.Year} key={`${item.Title}-${item.Year}`} />)}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SliderSection","import { connect } from 'react-redux'\r\nimport SliderSection from './SliderSection'\r\nimport { addList } from '../../state/thunks'\r\nimport { setPage } from '../../state/actionCreators'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setPage, addList })(SliderSection)","import React, { useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\nimport './ProfileSection.scss'\r\nimport avatar from '../../assets/icons/face.svg'\r\nimport settingsIcon from '../../assets/icons/settings_white.svg'\r\nimport historyIcon from '../../assets/icons/history.svg'\r\nimport listIcon from '../../assets/icons/list.svg'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nconst ProfileSection = ({ name, history, list, setProfileName, setProfileHistory, setProfileList, clearProfileHistory }) => {\r\n\r\n    const settingsModal = useRef(null)\r\n    const historyModal = useRef(null)\r\n    const listModal = useRef(null)\r\n    const [inputValue, setInputValue] = useState(name)\r\n\r\n    useEffect(() => {\r\n        setInputValue(name)\r\n    }, [name]);\r\n\r\n    const toggleModal = (e) => {\r\n        if (e.target.classList.contains('settings') || e.target.closest('#settings-button')) settingsModal.current.classList.toggle('modal_open')\r\n        if (e.target.classList.contains('history') || e.target.closest('#history-button')) historyModal.current.classList.toggle('modal_open')\r\n        if (e.target.classList.contains('list') || e.target.closest('#list-button')) listModal.current.classList.toggle('modal_open')\r\n        if (e.target.closest('#settings-button-close')) settingsModal.current.classList.remove('modal_open')\r\n        if (e.target.closest('#history-button-close')) historyModal.current.classList.remove('modal_open')\r\n        if (e.target.closest('#list-button-close')) listModal.current.classList.remove('modal_open')\r\n    }\r\n\r\n    return (\r\n        <section className='profile'>\r\n            <Container>\r\n                <div className='profile__block'>\r\n                    <div className='userinfo'>\r\n                        <img alt='avatar' src={avatar} className='userinfo__avatar' />\r\n                        <h1 className='userinfo__username'>{name}</h1>\r\n                        <Button className='button_medium' id='settings-button' onClick={toggleModal}>\r\n                            <img src={settingsIcon} alt='icon' />\r\n                            <span>Settings</span>\r\n                        </Button>\r\n                        <Button className='button_medium' id='history-button' onClick={toggleModal}>\r\n                            <img src={historyIcon} alt='icon' />\r\n                            <span>History</span>\r\n                        </Button>\r\n                        <Button className='button_medium' id='list-button' onClick={toggleModal}>\r\n                            <img src={listIcon} alt='icon' />\r\n                            <span>My list</span>\r\n                        </Button>\r\n                    </div>\r\n                    <div className='modal settings' ref={settingsModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Username:\r\n                            </span>\r\n                            <div className='modal__panel'>\r\n                                <Input type='text' value={inputValue} onChange={setInputValue} />\r\n                                <Button className='button_outlined' onClick={e => setProfileName(inputValue)}>Save</Button>\r\n                            </div>\r\n                            <div className='modal__panel'>\r\n                                <Button className='button_outlined' onClick={e => clearProfileHistory()}>Clear history</Button>\r\n                                <Button className='button_outlined'>Clear list</Button>\r\n                            </div>\r\n                            <div className='modal__panel'>\r\n                                <Button id='settings-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal history' ref={historyModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Your history:\r\n                            </span>\r\n                            <ul className='modal__list'>\r\n                                {history && history.length ? history.map((item, index) => <li key={`${item.title}(${index})`}>{item.title}, {item.type}</li>) : 'Your history is empty'}\r\n                            </ul>\r\n                            <div className='modal__panel'>\r\n                                <Button id='history-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal list' ref={listModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Your list:\r\n                            </span>\r\n                            <ul className='modal__list'>\r\n                                {list && list.length ? list.map((item, index) => <li key={`${item.title}(${index})`}>{item.title}, {item.type}</li>) : 'Your list is empty'}\r\n                            </ul>\r\n                            <div className='modal__panel'>\r\n                                <Button id='list-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileSection","import { connect } from 'react-redux'\r\nimport ProfileSection from './ProfileSection'\r\nimport { setProfileName, setProfileHistory, setProfileList, clearProfileHistory } from '../../state/thunks'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: state.profile.name,\r\n    list: state.profile.list,\r\n    history: state.profile.history\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { setProfileName, setProfileHistory, setProfileList, clearProfileHistory })(ProfileSection)","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Header from './components/Header/Header'\r\nimport SearchSectionContainer from './components/SearchSection/SearchSectionContainer'\r\nimport SliderSectionContainer from './components/SliderSection/SliderSectionContainer'\r\nimport ProfileSectionContainer from './components/ProfileSection/ProfileSectionContainer'\r\nimport logo from './assets/icons/logo.svg'\r\nimport { useEffect } from 'react'\r\nimport { getProfileName, getProfileList, getProfileHistory, setProfileHistory, setProfileList } from './state/thunks'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction App({ getProfileName, getProfileList, getProfileHistory, setProfileList, setProfileHistory, list, history }) {\r\n\r\n  useEffect(() => {\r\n    getProfileName()\r\n    getProfileList()\r\n    getProfileHistory()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (list && list.length) setProfileList(list)\r\n  }, [list])\r\n\r\n  useEffect(() => {\r\n    if (history && history.length) setProfileHistory(history)\r\n  }, [history])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header icon={logo} title='Movie App' />\r\n      <Route exact path='/'>\r\n        <SearchSectionContainer />\r\n        <SliderSectionContainer />\r\n      </Route>\r\n      <Route path='/profile'>\r\n        <ProfileSectionContainer />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.profile.name,\r\n  list: state.profile.list,\r\n  history: state.profile.history\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileName, getProfileList, getProfileHistory, setProfileList, setProfileHistory })(App);","import {\r\n    SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST,\r\n    SET_PROFILE_NAME, SET_PROFILE_LIST, ADD_PROFILE_LIST, SET_PROFILE_HISTORY, ADD_PROFILE_HISTORY\r\n} from './actionTypes'\r\n\r\nconst initialState = {\r\n    options: {\r\n        title: '',\r\n        type: 'movie',\r\n        page: 1,\r\n    },\r\n    data: {\r\n        list: null\r\n    },\r\n    profile: {\r\n        name: 'User',\r\n        list: [],\r\n        history: []\r\n    }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    title: action.title\r\n                }\r\n            }\r\n\r\n        case SET_TYPE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    type: action.searchType\r\n                }\r\n            }\r\n\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    page: action.page\r\n                }\r\n            }\r\n\r\n        case SET_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: action.list\r\n                }\r\n            }\r\n\r\n        case ADD_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: [...state.data.list, ...action.list]\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_NAME:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    name: action.name\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_LIST:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    list: action.list\r\n                }\r\n            }\r\n\r\n        case ADD_PROFILE_LIST:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    list: [...state.profile.list, action.list]\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_HISTORY:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    history: action.history\r\n                }\r\n            }\r\n\r\n        case ADD_PROFILE_HISTORY:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    history: [...state.profile.history, action.history]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { appReducer } from './reducer'\r\n\r\nexport const store = createStore(appReducer, applyMiddleware(thunk))\r\nwindow.store = store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './state/store'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
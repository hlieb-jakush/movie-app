{"version":3,"sources":["assets/icons/calendar.svg","assets/icons/favorite.svg","assets/icons/left.svg","assets/icons/right.svg","assets/icons/face.svg","assets/icons/settings_white.svg","assets/icons/history.svg","assets/icons/list.svg","assets/icons/logo.svg","components/Container/Container.jsx","components/Header/Header.jsx","state/actionCreators.js","state/actionTypes.js","components/Button/Button.jsx","components/Input/Input.jsx","components/SearchSection/SearchSection.jsx","state/api.js","state/thunks.js","components/SearchSection/SearchSectionContainer.jsx","components/ItemCard/ItemCard.jsx","components/SliderSection/SliderSection.jsx","components/SliderSection/SliderSectionContainer.jsx","components/ProfileSection/ProfileSection.jsx","components/ProfileSection/ProfileSectionContainer.jsx","App.js","state/reducer.js","state/store.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Header","icon","title","nav","useRef","burger","closeleMenu","current","classList","remove","to","onClick","src","alt","ref","exact","activeClassName","toggle","setPage","page","type","setList","list","setProfileNameAC","name","setProfileListAC","setProfileHistoryAC","history","addProfileHistoryAC","Button","id","Input","value","onChange","e","target","SearchSection","setTitle","setType","getList","defaultValue","instance","Axios","create","baseURL","storage","window","localStorage","API","get","then","response","data","Promise","resolve","reject","setItem","getItem","setProfileList","dispatch","catch","err","alert","setProfileHistory","JSON","stringify","connect","state","options","searchType","Response","Search","Error","ItemCard","poster","year","tabIndex","timeIcon","favoriteIcon","SliderSection","addList","slider","useState","loading","setLoading","buttonFunction","sliderBlock","scrollSize","clientWidth","currentTarget","getAttribute","scrollBy","left","top","behavior","useEffect","scrollTo","right","onScroll","scrollWidth","scrollLeft","setTimeout","map","item","Title","Poster","Year","key","ProfileSection","setProfileName","clearProfileHistory","settingsModal","historyModal","listModal","inputValue","setInputValue","toggleModal","contains","closest","avatar","settingsIcon","historyIcon","listIcon","length","index","profile","getProfileName","getProfileList","getProfileHistory","parse","logo","path","SearchSectionContainer","SliderSectionContainer","ProfileSectionContainer","initialState","store","createStore","action","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.7f5d8f7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.17b75e4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.e246b4e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.1caaef75.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.9a9e9d18.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.9f965a85.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_white.5b0cc761.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.dd742d74.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.654fd082.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1ae09dda.svg\";","import React from 'react'\r\nimport './Container.scss'\r\n\r\nconst Container = ({ children }) => {\r\n    return (\r\n        <div className='container'>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Container","import React, { useRef } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport Container from '../Container/Container'\r\nimport './Header.scss'\r\n\r\nconst Header = ({ icon, title }) => {\r\n\r\n    const nav = useRef(null)\r\n    const burger = useRef(null)\r\n\r\n    const toggleMenu = () => {\r\n        burger.current.classList.toggle('header__burger_open')\r\n        nav.current.classList.toggle('header__nav_open')\r\n    }\r\n\r\n    const closeleMenu = () => {\r\n        burger.current.classList.remove('header__burger_open')\r\n        nav.current.classList.remove('header__nav_open')\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <Container>\r\n                <Link to='/' className='button button_large header__main' onClick={closeleMenu}>\r\n                    <img src={icon} alt='logo' />\r\n                    <span>{title}</span>\r\n                </Link>\r\n                <nav className='header__nav' ref={nav}>\r\n                    <NavLink exact to='/' className='button' activeClassName='button_selected' onClick={closeleMenu}>\r\n                        Search\r\n                    </NavLink>\r\n                    <NavLink to='/profile' className='button' activeClassName='button_selected' onClick={closeleMenu}>\r\n                        Profile\r\n                    </NavLink>\r\n                </nav>\r\n                <span className='header__burger' ref={burger} onClick={toggleMenu} />\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {\r\n    SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST,\r\n    SET_PROFILE_NAME, SET_PROFILE_LIST, ADD_PROFILE_LIST, SET_PROFILE_HISTORY, ADD_PROFILE_HISTORY\r\n} from './actionTypes'\r\n\r\nexport const setTitle = (title) => ({ type: SET_TITLE, title })\r\nexport const setType = (searchType) => ({ type: SET_TYPE, searchType })\r\nexport const setPage = (page) => ({ type: SET_PAGE, page })\r\nexport const setList = (list) => ({ type: SET_LIST, list })\r\nexport const addList = (list) => ({ type: ADD_LIST, list })\r\nexport const setProfileNameAC = (name) => ({ type: SET_PROFILE_NAME, name })\r\nexport const setProfileListAC = (list) => ({ type: SET_PROFILE_LIST, list })\r\nexport const addProfileListAC = (list) => ({ type: ADD_PROFILE_LIST, list })\r\nexport const setProfileHistoryAC = (history) => ({ type: SET_PROFILE_HISTORY, history })\r\nexport const addProfileHistoryAC = (history) => ({ type: ADD_PROFILE_HISTORY, history })","export const SET_TITLE = 'SET_TITLE'\r\nexport const SET_TYPE = 'SET_TYPE'\r\nexport const SET_PAGE = 'SET_PAGE'\r\nexport const SET_LIST = 'SET_LIST'\r\nexport const ADD_LIST = 'ADD_LIST'\r\nexport const SET_PROFILE_NAME = 'SET_PROFILE_NAME'\r\nexport const SET_PROFILE_LIST = 'SET_PROFILE_LIST'\r\nexport const ADD_PROFILE_LIST = 'ADD_PROFILE_LIST'\r\nexport const SET_PROFILE_HISTORY = 'SET_PROFILE_HISTORY'\r\nexport const ADD_PROFILE_HISTORY = 'ADD_PROFILE_HISTORY'","import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst Button = ({ className, id, children, onClick }) => {\r\n    return (\r\n        <button className={`button ${className ? className : ''}`} onClick={onClick} id={id}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Input.scss'\r\n\r\nconst Input = ({ value, type, onChange }) => {\r\n\r\n    const onSetTitle = (e) => {\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <input className='input' type={type} value={value} onChange={onSetTitle} />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Container from '../Container/Container';\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\nimport './SearchSection.scss'\r\n\r\nconst SearchSection = ({ title, type, list, setTitle, setType, getList }) => {\r\n\r\n    return (\r\n        <section className='search'>\r\n            <Container>\r\n                <div className={`search__block ${!list ? 'search__block_middle' : ''}`}>\r\n                    <Input value={title} type='search' onChange={setTitle} />\r\n                    <select className='select' defaultValue={type} onChange={e => setType(e.target.value)}>\r\n                        <option value='movie'>Movie</option>\r\n                        <option value='series'>Series</option>\r\n                    </select>\r\n                    <Button onClick={e => getList(title, type, 1)}>Search</Button>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchSection","import Axios from \"axios\"\r\n\r\nconst key = 'dfdae3d4'\r\n\r\nconst instance = Axios.create({\r\n    baseURL: `https://www.omdbapi.com/`\r\n})\r\n\r\nconst storage = window.localStorage\r\n\r\nexport const API = {\r\n    getList(title, type, page) {\r\n        return instance.get(`?apikey=${key}&s=${title}&type=${type}&page=${page}`).then(response => response.data)\r\n    },\r\n\r\n    setLocalName(name) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('name', name)\r\n            resolve(name)\r\n        })\r\n    },\r\n\r\n    getLocalName() {\r\n        return new Promise(function (resolve, reject) {\r\n            let name = storage.getItem('name')\r\n            if (!name) name = 'User'\r\n            resolve(name)\r\n        })\r\n    },\r\n\r\n    setLocalList(list) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('list', list)\r\n            resolve(list)\r\n        })\r\n    },\r\n\r\n    getLocalList() {\r\n        return new Promise(function (resolve, reject) {\r\n            let list = storage.getItem('list')\r\n            resolve(list)\r\n        })\r\n    },\r\n\r\n    clearLocalList() {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('list', '')\r\n            resolve('')\r\n        })\r\n    },\r\n\r\n    setLocalHistory(history) {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('history', history)\r\n            resolve(history)\r\n        })\r\n    },\r\n\r\n    getLocalHistory() {\r\n        return new Promise(function (resolve, reject) {\r\n            let history = storage.getItem('history')\r\n            resolve(history)\r\n        })\r\n    },\r\n\r\n    clearLocalHistory() {\r\n        return new Promise(function (resolve, reject) {\r\n            storage.setItem('history', '')\r\n            resolve('')\r\n        })\r\n    },\r\n}","import { API } from \"./api\"\r\nimport { setList, addList as addListAC, setProfileNameAC, setProfileHistoryAC, setProfileListAC, addProfileHistoryAC } from \"./actionCreators\"\r\n\r\nexport const getList = (title, type, page) => (dispatch) => {\r\n    if (!title) return\r\n    API.getList(title, type, page)\r\n        .then(data => {\r\n            if (data.Response === 'False') {\r\n                alert(data.Error)\r\n                return\r\n            }\r\n            dispatch(setList(data.Search))\r\n        })\r\n        .then(data => dispatch(addProfileHistoryAC({ title, type })))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const addList = (title, type, page) => (dispatch) => {\r\n    API.getList(title, type, page)\r\n        .then(data => {\r\n            if (data.Response === 'False') {\r\n                alert(data.Error)\r\n                return\r\n            }\r\n            dispatch(addListAC(data.Search))\r\n        })\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileName = (name) => (dispatch) => {\r\n    API.setLocalName(name)\r\n        .then(data => dispatch(setProfileNameAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileName = () => (dispatch) => {\r\n    API.getLocalName()\r\n        .then(data => dispatch(setProfileNameAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileList = (list) => (dispatch) => {\r\n    API.setLocalList(list)\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileList = () => (dispatch) => {\r\n    API.getLocalList()\r\n        .then(data => {\r\n            if (data) dispatch(setProfileListAC(data))\r\n        })\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const clearProfileList = () => (dispatch) => {\r\n    API.clearLocalList()\r\n        .then(data => dispatch(setProfileListAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const setProfileHistory = (history) => (dispatch) => {\r\n    API.setLocalHistory(JSON.stringify(history))\r\n        .catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const getProfileHistory = () => (dispatch) => {\r\n    API.getLocalHistory()\r\n        .then(data => {\r\n            if (data) dispatch(setProfileHistoryAC(JSON.parse(data)))\r\n        }).catch(err => alert('thunks error:', err))\r\n}\r\n\r\nexport const clearProfileHistory = () => (dispatch) => {\r\n    API.clearLocalHistory()\r\n        .then(data => dispatch(setProfileHistoryAC(data)))\r\n        .catch(err => alert('thunks error:', err))\r\n}","import { connect } from 'react-redux'\r\nimport { setTitle, setList, setType, setPage, addProfileHistoryAC } from '../../state/actionCreators'\r\nimport SearchSection from './SearchSection'\r\nimport { getList } from '../../state/thunks'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setTitle, setType, setPage, setList, getList, addProfileHistoryAC })(SearchSection)","import React from 'react'\r\nimport Button from '../Button/Button'\r\nimport timeIcon from '../../assets/icons/calendar.svg'\r\nimport favoriteIcon from '../../assets/icons/favorite.svg'\r\nimport './ItemCard.scss'\r\n\r\nconst ItemCard = ({ title, poster, year }) => {\r\n    return (\r\n\r\n        <div className='card' tabIndex='0'>\r\n            <img src={poster} alt={title} className='card__poster' />\r\n            <div className='card__field'>\r\n                <h2 className='card__title'>{title}</h2>\r\n                <span className='card__year'><img src={timeIcon} alt='runtime' className='card__icon' />{year}</span>\r\n            </div>\r\n            <Button className='button_medium'>\r\n                <img src={favoriteIcon} alt='icon' />\r\n                <span>Like it!</span>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard","import React, { useEffect, useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport ItemCard from '../ItemCard/ItemCard'\r\nimport left from '../../assets/icons/left.svg'\r\nimport right from '../../assets/icons/right.svg'\r\nimport './SliderSection.scss'\r\nimport { useState } from 'react'\r\n\r\nconst SliderSection = ({ title, type, page, list, setPage, addList }) => {\r\n\r\n    const slider = useRef(null)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const buttonFunction = (e) => {\r\n        const sliderBlock = slider.current\r\n        let scrollSize = sliderBlock.clientWidth\r\n        if (e.currentTarget.getAttribute('id') === 'prev') scrollSize = -scrollSize\r\n        sliderBlock.scrollBy({ left: scrollSize, top: 0, behavior: \"smooth\" })\r\n    }\r\n\r\n    const setPageFunction = () => {\r\n        if (slider.current.scrollWidth - (slider.current.scrollLeft + slider.current.clientWidth) < slider.current.clientWidth && !loading) {\r\n            setLoading(true)\r\n            setPage(page + 1)\r\n            addList(title, type, page + 1)\r\n            setTimeout(() => setLoading(false), 3000)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sliderBlock = slider.current\r\n        sliderBlock.scrollTo({ left: 0, top: 0, behavior: \"smooth\" })\r\n    }, [title, type])\r\n\r\n    return (\r\n        <section className={`slider ${!list ? 'slider_hidden' : ''}`}>\r\n            <Container>\r\n                <div className='slider__block'>\r\n                    <div className='slider__navigation'>\r\n                        <Button className='slider__button' id='prev' onClick={buttonFunction}>\r\n                            <img className='header__icon' src={left} alt='logo' />\r\n                            <span className='header__title'>Prev</span>\r\n                        </Button>\r\n                        <Button className='slider__button' id='next' onClick={buttonFunction}>\r\n                            <span className='header__title'>Next</span>\r\n                            <img className='header__icon' src={right} alt='logo' />\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"slider__carousel\" ref={slider} onScroll={setPageFunction}>\r\n                        {list && list.map(item => <ItemCard title={item.Title} poster={item.Poster} year={item.Year} key={`${item.Title}-${item.Year}`} />)}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SliderSection","import { connect } from 'react-redux'\r\nimport SliderSection from './SliderSection'\r\nimport { addList } from '../../state/thunks'\r\nimport { setPage } from '../../state/actionCreators'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setPage, addList })(SliderSection)","import React, { useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\nimport './ProfileSection.scss'\r\nimport avatar from '../../assets/icons/face.svg'\r\nimport settingsIcon from '../../assets/icons/settings_white.svg'\r\nimport historyIcon from '../../assets/icons/history.svg'\r\nimport listIcon from '../../assets/icons/list.svg'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nconst ProfileSection = ({ name, history, list, setProfileName, setProfileHistory, setProfileList, clearProfileHistory }) => {\r\n\r\n    const settingsModal = useRef(null)\r\n    const historyModal = useRef(null)\r\n    const listModal = useRef(null)\r\n    const [inputValue, setInputValue] = useState(name)\r\n\r\n    useEffect(() => {\r\n        setInputValue(name)\r\n    }, [name]);\r\n\r\n    const toggleModal = (e) => {\r\n        if (e.target.classList.contains('settings') || e.target.closest('#settings-button')) settingsModal.current.classList.toggle('modal_open')\r\n        if (e.target.classList.contains('history') || e.target.closest('#history-button')) historyModal.current.classList.toggle('modal_open')\r\n        if (e.target.classList.contains('list') || e.target.closest('#list-button')) listModal.current.classList.toggle('modal_open')\r\n        if (e.target.closest('#settings-button-close')) settingsModal.current.classList.remove('modal_open')\r\n        if (e.target.closest('#history-button-close')) historyModal.current.classList.remove('modal_open')\r\n        if (e.target.closest('#list-button-close')) listModal.current.classList.remove('modal_open')\r\n    }\r\n\r\n    return (\r\n        <section className='profile'>\r\n            <Container>\r\n                <div className='profile__block'>\r\n                    <div className='userinfo'>\r\n                        <img alt='avatar' src={avatar} className='userinfo__avatar' />\r\n                        <h1 className='userinfo__username'>{name}</h1>\r\n                        <Button className='button_medium' id='settings-button' onClick={toggleModal}>\r\n                            <img src={settingsIcon} alt='icon' />\r\n                            <span>Settings</span>\r\n                        </Button>\r\n                        <Button className='button_medium' id='history-button' onClick={toggleModal}>\r\n                            <img src={historyIcon} alt='icon' />\r\n                            <span>History</span>\r\n                        </Button>\r\n                        <Button className='button_medium' id='list-button' onClick={toggleModal}>\r\n                            <img src={listIcon} alt='icon' />\r\n                            <span>My list</span>\r\n                        </Button>\r\n                    </div>\r\n                    <div className='modal settings' ref={settingsModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Username:\r\n                            </span>\r\n                            <div className='modal__panel'>\r\n                                <Input type='text' value={inputValue} onChange={setInputValue} />\r\n                                <Button className='button_outlined' onClick={e => setProfileName(inputValue)}>Save</Button>\r\n                            </div>\r\n                            <div className='modal__panel'>\r\n                                <Button className='button_outlined' onClick={e => clearProfileHistory()}>Clear history</Button>\r\n                                <Button className='button_outlined'>Clear list</Button>\r\n                            </div>\r\n                            <div className='modal__panel'>\r\n                                <Button id='settings-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal history' ref={historyModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Your history:\r\n                            </span>\r\n                            <ul className='modal__list'>\r\n                                {history && history.length ? history.map((item, index) => <li key={`${item.title}(${index})`}>{item.title}, {item.type}</li>) : 'Your history is empty'}\r\n                            </ul>\r\n                            <div className='modal__panel'>\r\n                                <Button id='history-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal list' ref={listModal} onClick={toggleModal}>\r\n                        <div className='modal__content'>\r\n                            <span className='modal__info'>\r\n                                Your list:\r\n                            </span>\r\n                            <ul className='modal__list'>\r\n                                {list && list.length ? list.map((item, index) => <li key={`${item.title}(${index})`}>{item.title}, {item.type}</li>) : 'Your list is empty'}\r\n                            </ul>\r\n                            <div className='modal__panel'>\r\n                                <Button id='list-button-close' onClick={toggleModal}>Okay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileSection","import { connect } from 'react-redux'\r\nimport ProfileSection from './ProfileSection'\r\nimport { setProfileName, setProfileHistory, setProfileList, clearProfileHistory } from '../../state/thunks'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: state.profile.name,\r\n    list: state.profile.list,\r\n    history: state.profile.history\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { setProfileName, setProfileHistory, setProfileList, clearProfileHistory })(ProfileSection)","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Header from './components/Header/Header'\r\nimport SearchSectionContainer from './components/SearchSection/SearchSectionContainer'\r\nimport SliderSectionContainer from './components/SliderSection/SliderSectionContainer'\r\nimport ProfileSectionContainer from './components/ProfileSection/ProfileSectionContainer'\r\nimport logo from './assets/icons/logo.svg'\r\nimport { useEffect } from 'react'\r\nimport { getProfileName, getProfileList, getProfileHistory, setProfileHistory, setProfileList } from './state/thunks'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction App({ getProfileName, getProfileList, getProfileHistory, setProfileList, setProfileHistory, list, history }) {\r\n\r\n  useEffect(() => {\r\n    getProfileName()\r\n    getProfileList()\r\n    getProfileHistory()\r\n  }, [getProfileName, getProfileList, getProfileHistory])\r\n\r\n  useEffect(() => {\r\n    if (list && list.length) setProfileList(list)\r\n  }, [list, setProfileList])\r\n\r\n  useEffect(() => {\r\n    if (history && history.length) setProfileHistory(history)\r\n  }, [history, setProfileHistory])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header icon={logo} title='Movie App' />\r\n      <Route exact path='/'>\r\n        <SearchSectionContainer />\r\n        <SliderSectionContainer />\r\n      </Route>\r\n      <Route path='/profile'>\r\n        <ProfileSectionContainer />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.profile.name,\r\n  list: state.profile.list,\r\n  history: state.profile.history\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileName, getProfileList, getProfileHistory, setProfileList, setProfileHistory })(App);","import {\r\n    SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST,\r\n    SET_PROFILE_NAME, SET_PROFILE_LIST, ADD_PROFILE_LIST, SET_PROFILE_HISTORY, ADD_PROFILE_HISTORY\r\n} from './actionTypes'\r\n\r\nconst initialState = {\r\n    options: {\r\n        title: '',\r\n        type: 'movie',\r\n        page: 1,\r\n    },\r\n    data: {\r\n        list: null\r\n    },\r\n    profile: {\r\n        name: 'User',\r\n        list: [],\r\n        history: []\r\n    }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    title: action.title\r\n                }\r\n            }\r\n\r\n        case SET_TYPE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    type: action.searchType\r\n                }\r\n            }\r\n\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    page: action.page\r\n                }\r\n            }\r\n\r\n        case SET_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: action.list\r\n                }\r\n            }\r\n\r\n        case ADD_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: [...state.data.list, ...action.list]\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_NAME:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    name: action.name\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_LIST:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    list: action.list\r\n                }\r\n            }\r\n\r\n        case ADD_PROFILE_LIST:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    list: [...state.profile.list, action.list]\r\n                }\r\n            }\r\n\r\n        case SET_PROFILE_HISTORY:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    history: action.history\r\n                }\r\n            }\r\n\r\n        case ADD_PROFILE_HISTORY:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    history: [...state.profile.history, action.history]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { appReducer } from './reducer'\r\n\r\nexport const store = createStore(appReducer, applyMiddleware(thunk))\r\nwindow.store = store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './state/store'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename='/movie-app'>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
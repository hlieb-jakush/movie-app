{"version":3,"sources":["assets/icons/calendar.svg","assets/icons/left.svg","assets/icons/right.svg","assets/icons/logo.svg","components/Container/Container.jsx","components/Button/Button.jsx","components/Header/Header.jsx","state/actionCreators.js","state/actionTypes.js","components/Input/Input.jsx","components/SearchSection/SearchSection.jsx","state/api.js","components/SearchSection/SearchSectionContainer.jsx","state/thunks.js","components/ItemCard/ItemCard.jsx","components/SliderSection/SliderSection.jsx","components/SliderSection/SliderSectionContainer.jsx","App.js","state/reducer.js","state/store.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Button","id","onClick","Header","icon","title","nav","useRef","href","src","alt","ref","e","currentTarget","classList","toggle","current","setPage","page","type","setList","list","Input","onChange","value","target","SearchSection","setTitle","setType","getList","useState","localTitle","setlLocalTitle","localType","setlLocalType","useEffect","defaultValue","instance","Axios","create","baseURL","API","get","then","response","data","connect","state","options","searchType","dispatch","Search","ItemCard","poster","year","tabIndex","time","SliderSection","addList","slider","buttonFunction","sliderBlock","scrollSize","clientWidth","getAttribute","scrollBy","left","top","behavior","scrollTo","right","onScroll","scrollWidth","scrollLeft","map","item","Title","Poster","Year","key","Response","alert","Error","catch","err","App","logo","SearchSectionContainer","SliderSectionContainer","initialState","store","createStore","action","applyMiddleware","thunk","window","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.39e01837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.17b75e4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.1caaef75.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.9a9e9d18.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1ae09dda.svg\";","import React from 'react'\r\nimport './Container.scss'\r\n\r\nconst Container = ({ children }) => {\r\n    return (\r\n        <div className='container'>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst Button = ({ className, id, children, onClick }) => {\r\n    return (\r\n        <button className={`button ${className ? className : ''}`} onClick={onClick} id={id}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport './Header.scss'\r\n\r\nconst Header = ({ icon, title }) => {\r\n\r\n    const nav = useRef(null)\r\n\r\n    const openMenu = (e) => {\r\n        e.currentTarget.classList.toggle('header__burger_open')\r\n        nav.current.classList.toggle('header__nav_open')\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <Container>\r\n                <a href='https://yakushgleb.github.io/movie-app/' className='header__main'>\r\n                    <Button>\r\n                        {icon && <img className='header__icon' src={icon} alt='logo' />}\r\n                        {title && <span className='header__title'>{title}</span>}\r\n                    </Button>\r\n                </a>\r\n                <nav className='header__nav' ref={nav}>\r\n                    <Button>My List</Button>\r\n                    <Button>Search</Button>\r\n                </nav>\r\n                <span className='header__burger' onClick={openMenu} />\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST } from './actionTypes'\r\n\r\nexport const setTitle = (title) => ({ type: SET_TITLE, title })\r\nexport const setType = (searchType) => ({ type: SET_TYPE, searchType })\r\nexport const setPage = (page) => ({ type: SET_PAGE, page })\r\nexport const setList = (list) => ({ type: SET_LIST, list })\r\nexport const addList = (list) => ({ type: ADD_LIST, list })","export const SET_TITLE = 'SET_TITLE'\r\nexport const SET_TYPE = 'SET_TYPE'\r\nexport const SET_PAGE = 'SET_PAGE'\r\nexport const SET_LIST = 'SET_LIST'\r\nexport const ADD_LIST = 'ADD_LIST'","import React from 'react'\r\nimport './Input.scss'\r\n\r\nconst Input = ({ title, onChange }) => {\r\n\r\n    const onSetTitle = (e) => {\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <input className='input' value={title} onChange={onSetTitle} />\r\n    )\r\n}\r\n\r\nexport default Input","import React, { useState, useEffect } from 'react'\r\nimport Container from '../Container/Container';\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\nimport './SearchSection.scss'\r\n\r\nconst SearchSection = ({ title, type, list, setTitle, setType, setPage, getList }) => {\r\n\r\n    const [localTitle, setlLocalTitle] = useState(title)\r\n    const [localType, setlLocalType] = useState(type)\r\n\r\n    const onSetlLocalType = (e) => {\r\n        setlLocalType(e.target.value)\r\n    }\r\n\r\n    const onSetOptions = () => {\r\n        setTitle(localTitle)\r\n        setType(localType)\r\n        setPage(1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList(title, type)\r\n    }, [title, type, getList]);\r\n\r\n    return (\r\n        <section className='search'>\r\n            <Container>\r\n                <div className={`search__block ${!list ? 'search__block_middle' : ''}`}>\r\n                    <Input title={localTitle} onChange={setlLocalTitle} />\r\n                    <select className='select' defaultValue={localType} onChange={onSetlLocalType}>\r\n                        <option value='movie'>Movie</option>\r\n                        <option value='series'>Series</option>\r\n                    </select>\r\n                    <Button onClick={onSetOptions}>Search</Button>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchSection","import Axios from \"axios\"\r\n\r\nconst key = 'dfdae3d4'\r\n\r\nconst instance = Axios.create({\r\n    baseURL: `https://www.omdbapi.com/`\r\n})\r\n\r\nexport const API = {\r\n    getList(title, type, page) {\r\n        return instance.get(`?apikey=${key}&s=${title}&type=${type}&page=${page}`).then(response => response.data)\r\n    }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { setTitle, setList, setType, setPage } from '../../state/actionCreators'\r\nimport SearchSection from './SearchSection'\r\nimport { getList } from '../../state/thunks'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setTitle, setType, setPage, setList, getList })(SearchSection)","import { API } from \"./api\"\r\nimport { setList, addList as addListAC } from \"./actionCreators\"\r\n\r\nexport const getList = (title, type, page = 1) => (dispatch) => {\r\n    API.getList(title, type, page).then(data => dispatch(setList(data.Search)))\r\n}\r\n\r\nexport const addList = (title, type, page) => (dispatch) => {\r\n    API.getList(title, type, page).then(data => {\r\n        if (data.Response === 'False') {\r\n            alert(data.Error)\r\n            return\r\n        }\r\n        dispatch(addListAC(data.Search))\r\n    }).catch(err => alert(err))\r\n}","import React from 'react'\r\nimport time from '../../assets/icons/calendar.svg'\r\nimport './ItemCard.scss'\r\n\r\nconst ItemCard = ({ title, poster, year }) => {\r\n    return (\r\n        <div className='card' tabIndex='0'>\r\n            <img src={poster} alt={title} className='card__poster' />\r\n            <div className='card__field'>\r\n                <h2 className='card__title'>{title}</h2>\r\n                <span className='card__year'><img src={time} alt='runtime' className='card__icon' />{year}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard","import React, { useEffect, useRef } from 'react'\r\nimport Container from '../Container/Container'\r\nimport Button from '../Button/Button'\r\nimport ItemCard from '../ItemCard/ItemCard'\r\nimport left from '../../assets/icons/left.svg'\r\nimport right from '../../assets/icons/right.svg'\r\nimport './SliderSection.scss'\r\n\r\nconst SliderSection = ({ title, type, page, list, setPage, addList }) => {\r\n\r\n    const slider = useRef(null)\r\n\r\n    const buttonFunction = (e) => {\r\n        const sliderBlock = slider.current\r\n        let scrollSize = sliderBlock.clientWidth\r\n        if (e.currentTarget.getAttribute('id') === 'prev') scrollSize = -scrollSize\r\n        sliderBlock.scrollBy({ left: scrollSize, top: 0, behavior: \"smooth\" })\r\n    }\r\n\r\n    const scrollFunction = () => {\r\n        if (slider.current.scrollWidth - (slider.current.scrollLeft + slider.current.clientWidth) === 0) {\r\n            setPage(page + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sliderBlock = slider.current\r\n        sliderBlock.scrollTo({ left: 0, top: 0, behavior: \"smooth\" })\r\n    }, [title, type])\r\n\r\n    useEffect(() => {\r\n        if (page > 1) addList(title, type, page)\r\n    }, [page])\r\n\r\n    return (\r\n        <section className={`slider ${!list ? 'slider_hidden' : ''}`}>\r\n            <Container>\r\n                <div className='slider__block'>\r\n                    <div className='slider__navigation'>\r\n                        <Button className='slider__button' id='prev' onClick={buttonFunction}>\r\n                            <img className='header__icon' src={left} alt='logo' />\r\n                            <span className='header__title'>Prev</span>\r\n                        </Button>\r\n                        <Button className='slider__button' id='next' onClick={buttonFunction}>\r\n                            <span className='header__title'>Next</span>\r\n                            <img className='header__icon' src={right} alt='logo' />\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"slider__carousel\" ref={slider} onScroll={scrollFunction}>\r\n                        {list && list.map(item => <ItemCard title={item.Title} poster={item.Poster} year={item.Year} key={`${item.Title}-${item.Year}`} />)}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SliderSection","import { connect } from 'react-redux'\r\nimport SliderSection from './SliderSection'\r\nimport { addList } from '../../state/thunks'\r\nimport { setPage } from '../../state/actionCreators'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.options.title,\r\n    type: state.options.type,\r\n    page: state.options.page,\r\n    list: state.data.list\r\n})\r\n\r\nexport default connect(mapStateToProps, { setPage, addList })(SliderSection)","import React from 'react'\r\nimport Header from './components/Header/Header'\r\nimport SearchSectionContainer from './components/SearchSection/SearchSectionContainer'\r\nimport SliderSectionContainer from './components/SliderSection/SliderSectionContainer'\r\nimport logo from './assets/icons/logo.svg'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header icon={logo} title='Movie App' />\r\n      <SearchSectionContainer />\r\n      <SliderSectionContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { SET_TITLE, SET_TYPE, SET_PAGE, SET_LIST, ADD_LIST } from './actionTypes'\r\n\r\nconst initialState = {\r\n    options: {\r\n        title: '',\r\n        type: 'movie',\r\n        page: 1,\r\n    },\r\n    data: {\r\n        list: null\r\n\r\n    }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TITLE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    title: action.title\r\n                }\r\n            }\r\n\r\n        case SET_TYPE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    type: action.searchType\r\n                }\r\n            }\r\n\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                options: {\r\n                    ...state.options,\r\n                    page: action.page\r\n                }\r\n            }\r\n\r\n        case SET_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: action.list\r\n                }\r\n            }\r\n\r\n        case ADD_LIST:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    list: [...state.data.list, ...action.list]\r\n                }\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { appReducer } from './reducer'\r\n\r\nexport const store = createStore(appReducer, applyMiddleware(thunk))\r\nwindow.store = store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './state/store'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}